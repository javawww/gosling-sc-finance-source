<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.gosling.dao.menu.MenuDao">  
     
    <select id="findlist" resultType="com.gosling.entity.menu.Menu">
		SELECT * from t_menu
	</select>  
    <select id="findlistbypid_memId" parameterType="Integer" resultType="com.gosling.entity.menu.Menu">
		SELECT * from t_menu where `pid` = #{id} and id in(SELECT t.menuId from t_mem_menu t where t.memId = #{memId});
	</select>  
    <select id="findCommon" resultType="java.util.HashMap" parameterType="java.util.Map">
		SELECT a.*,IFNULL(b.wdcount,0) AS wdcount,IFNULL(c.ydcount,0) AS ydcount,IFNULL(d.sumcount,0) AS sumcount FROM wl_cg a LEFT JOIN 
		(SELECT COUNT(1) AS wdcount,cg_id FROM wl_cg_xx WHERE state=0 GROUP BY cg_id) b ON a.id=b.cg_id LEFT JOIN
		(SELECT COUNT(1) AS ydcount,cg_id FROM wl_cg_xx WHERE state=1 GROUP BY cg_id) c ON a.id=c.cg_id LEFT JOIN
		(SELECT COUNT(1) AS sumcount,cg_id FROM wl_cg_xx GROUP BY cg_id) d ON a.id=d.cg_id 
   		WHERE 1=1  
		<if test="types!='' and types!=null "> and type_id=#{types} </if> 
   		<if test="djrxm!='' and djrxm!=null "> and djrxm like '%${djrxm}%'</if>    
		<if test="prostate!='' and prostate!=null "> and state=#{prostate} </if> 
		<if test="uid!='' and uid!=null "> and a.djr=#{uid} </if>
   		order by a.id desc limit ${start},${limit} 
	</select>  
     
    <insert id="addCommon" parameterType="java.util.Map"> 
        insert into wl_cg(type_id,value1,value2,value3,value4,yg,bz,djr,djrxm,djsj)
        values(#{type_id},#{value1},#{value2},#{value3},#{value4},#{yg},#{bz},#{djr},#{djrxm},#{djsj})
    </insert> 
    
    <delete id="deleteCommon">
        delete from wl_cg where id=#{id}
    </delete>  
    
    <update id="updateCommon" parameterType="java.util.Map">
        update wl_cg set type_id=#{type_id},value1=#{value1},value2=#{value2},value3=#{value3},value4=#{value4},
        yg=#{yg},bz=#{bz} where id=#{id}
    </update>
	
    <select id="findCommonCount" resultType="Integer" parameterType="java.util.Map"> 
         select count(1) from wl_cg where 1=1 
         <if test="types!='' and types!=null"> and type_id=#{types} </if> 
   		 <if test="djrxm!='' and djrxm!=null"> and djrxm like '%${djrxm}%'</if>
   		 <if test="prostate!='' and prostate!=null "> and state=#{prostate} </if>     
   		 <if test="uid!='' and uid!=null "> and djr=#{uid} </if>    
    </select>
    
    <select id="findCommonByUser" resultType="java.util.HashMap" parameterType="java.util.Map">
		SELECT a.*,IFNULL(b.wdcount,0) AS wdcount,IFNULL(c.ydcount,0) AS ydcount,IFNULL(d.sumcount,0) AS sumcount FROM wl_cg a LEFT JOIN 
		(SELECT COUNT(1) AS wdcount,cg_id FROM wl_cg_xx WHERE state=0 GROUP BY cg_id) b ON a.id=b.cg_id LEFT JOIN
		(SELECT COUNT(1) AS ydcount,cg_id FROM wl_cg_xx WHERE state=1 GROUP BY cg_id) c ON a.id=c.cg_id LEFT JOIN
		(SELECT COUNT(1) AS sumcount,cg_id FROM wl_cg_xx GROUP BY cg_id) d ON a.id=d.cg_id 
		WHERE a.type_id=#{type_id} and a.djr=#{djr}
   		ORDER BY a.id DESC LIMIT ${start},${limit} 
	</select>  
	
    <select id="findCommonByUserCount" resultType="Integer" parameterType="java.util.Map"> 
         select count(1) from wl_cg where type_id=#{type_id} and djr=#{djr}      
    </select>
    
    <update id="updateCommonState" parameterType="java.util.Map">
        update wl_cg set state=#{state} where id=#{id}
    </update>  
    
    <select id="findCommonbyid" resultType="java.util.HashMap">
        select * from wl_cg where id=#{id}
    </select>
    
    
    <select id="findCommonxxByCommon" resultType="java.util.HashMap">
    	SELECT a.*,b.type_id,c.user_name FROM wl_cg_xx a LEFT JOIN wl_cg b ON a.cg_id=b.id LEFT JOIN wl_hyxx c ON a.user_id=c.id where a.cg_id=#{cgid}
    </select>
    <select id="findCommonxxByUser" resultType="java.util.HashMap">
         SELECT a.*,b.type_id,c.user_name FROM wl_cg_xx a LEFT JOIN wl_cg b ON a.cg_id=b.id LEFT JOIN wl_hyxx c ON a.user_id=c.id WHERE b.djr=#{userid}
    </select>
    <select id="findCommonxxByUserAndState" resultType="java.util.HashMap">
         SELECT a.*,b.type_id,c.user_name FROM wl_cg_xx a LEFT JOIN wl_cg b ON a.cg_id=b.id LEFT JOIN wl_hyxx c ON a.user_id=c.id WHERE b.djr=#{userid} and a.state=0 
    </select>
    <update id="updateCommonxxState">
        update wl_cg_xx set state=1 where id=#{id}
    </update>
    
    
    <select id="findCommonxqxx" resultType="java.util.HashMap" parameterType="java.util.Map">
		SELECT a.*,b.user_realname,c.user_realname as user_realname1 FROM wl_cg_xx a LEFT JOIN wl_user b ON a.user_id=b.id 
   		LEFT JOIN wl_hyxx c ON a.user_id=c.id  where a.cg_id=#{cgid} 
		order by id desc limit ${start},${limit} 
	</select>  
	
    <select id="findCommonxqxxCount" resultType="Integer" > 
         SELECT count(1) FROM wl_cg_xx a LEFT JOIN wl_user b ON a.user_id=b.id where a.cg_id=#{cgid}    
    </select>
    
    <select id="findCommonxxbyid" resultType="java.util.HashMap">
       SELECT a.*,b.user_realname,c.user_realname AS user_realname1,d.djr AS cgdjr FROM wl_cg_xx a LEFT JOIN wl_user b ON a.user_id=b.id 
   		LEFT JOIN wl_hyxx c ON a.user_id=c.id LEFT JOIN wl_cg d ON a.cg_id=d.id where a.id=#{id}
    </select>
    
    <select id="findCommonbyindex" resultType="java.util.HashMap">
        SELECT a.*,b.user_name,c.user_name as user_name1  FROM wl_cg a LEFT JOIN wl_user b ON a.djr=b.id
   		LEFT JOIN wl_hyxx c ON a.djr=c.id where a.state=1  order by a.id desc limit 0,30
    </select>
    
    <select id="findProByIndexAll" resultType="java.util.HashMap" parameterType="java.util.Map">
        SELECT a.*,b.user_name,c.user_name as user_name1  FROM wl_cg a 
        LEFT JOIN wl_user b ON a.djr=b.id
   		LEFT JOIN wl_hyxx c ON a.djr=c.id 
        WHERE a.type_id=#{type_id} AND a.state=1 order by a.id desc limit ${start},${limit} 
    </select>
    
    <insert id="addCommonxx" parameterType="java.util.Map">
        INSERT INTO wl_cg_xx(cg_id,user_id,tel,xm,ms,djsj)VALUES
        (#{cg_id},#{user_id},#{tel},#{xm},#{ms},#{djsj}) 
    </insert>
    
    <select id="findCommonByList" resultType="java.util.HashMap" parameterType="java.util.Map">
        SELECT a.*,b.user_name,c.user_name AS user_name1  FROM wl_cg a LEFT JOIN wl_user b ON a.djr=b.id 
   		LEFT JOIN wl_hyxx c ON a.djr=c.id where a.state=1 and a.type_id=#{type_id}
        <if test="cc!='' and cc!=null "> and (b.user_name like '%${cc}%' or c.user_name like '%${cc}%')</if>
        
        order by id desc limit ${start},${limit} 
    </select>
    <select id="findCommonByListCount" resultType="Integer" parameterType="java.util.Map">
        SELECT count(1)  FROM wl_cg a LEFT JOIN wl_user b ON a.djr=b.id 
   		LEFT JOIN wl_hyxx c ON a.djr=c.id where a.state=1 and a.type_id=#{type_id}
        <if test="cc!='' and cc!=null "> and (b.user_name like '%${cc}%' or c.user_name like '%${cc}%')</if>
        
    </select>
    
    
	<select id="findCommonbyuser" resultType="java.util.HashMap">
	    select * from wl_cg where djr=#{id}
	</select>
	<delete id="deleteCommonxxByCommon">
	    delete from wl_cg_xx where cg_id=#{cgid}
	</delete>
	
	<delete id="deleteCommonByUser">
	    delete from wl_cg where djr=#{djr}
	</delete>
	<!--  删除所有关联管理员Id的菜单数据-->
	<delete id="deleteByAdminId">
	    delete from t_mem_menu where memId=#{adminId}
	</delete>
    <insert id="insert" parameterType="com.gosling.entity.menu.MemMenu" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
    	INSERT INTO `t_mem_menu` (
        	`memId`, 
        	`menuId`
        ) 
        VALUES ( 
        	#{memId},
        	#{menuId}
        );
    </insert>
    <select id="selectByMenuId_MemId" resultType="com.gosling.entity.menu.MemMenu" parameterType="Integer">
    	select * from t_mem_menu where  1=1
    	<if test="menuId!=null">and menuId=#{menuId}</if>
    	<if test="memId!=null">and memId=#{memId}</if>
    </select>
    <!-- 查询 权限控制菜单列表数据 -->
    <select id="findListByMemId" resultType="com.gosling.entity.menu.Menu" parameterType="Integer">
    	SELECT * FROM t_menu WHERE id in(SELECT t.menuId from t_mem_menu t where t.memId = #{memId} )
    </select>
</mapper>